plugins {
    id("java-library")
    id("maven")
    id("maven-publish")
    id("fabric-loom") version("0.5-SNAPSHOT")
    id("com.jfrog.bintray") version("1.8.5")
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

project.group = project.mavenGroup
project.archivesBaseName = project.baseName
project.version = project.modVersion

configurations.all {
    resolutionStrategy.cacheChangingModulesFor(0, "seconds")
}

repositories {
    mavenLocal()

    maven {url = "https://dl.bintray.com/user11681/maven"}
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraftVersion}")
    mappings("net.fabricmc:yarn:${project.minecraftVersion}+build.${project.yarnBuild}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loaderVersion}")

    testImplementation("org.junit.jupiter:junit-jupiter:+")

    // concern
    // extraLibs files("${System.getProperty('java.home')}/../lib/tools.jar")

    modApi("user11681:narratoroff:+")

    modApi(include("net.bytebuddy:byte-buddy-agent:+"))
    modApi(include("net.gudenau.lib:unsafe:+"))
    modApi(include("user11681:dynamicentry:+"))
    modApi(include("user11681:reflect:0.11.6"))

    modApi("net.fabricmc.fabric-api:fabric-api:+")
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")

    from(sourceSets.main.allSource)
}

jar {
    from("LICENSE")

    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Agent-Class": "net.devtech.grossfabrichacks.instrumentation.InstrumentationAgent",
                "Can-Retransform-Classes": "true"
        )
    }
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_API_KEY")
    publish = true
    setPublications("maven")

    pkg {
        repo = "maven"
        name = project.name
        licenses = ["LGPL-3.0"]
        vcsUrl = "https://github.com/user11681/grossfabrichacks.git"

        version {
            name = project.version
            released = new Date()
            githubRepo = "user11681/grossfabrichacks"
            issueTrackerUrl = "https://github.com/user11681/grossfabrichacks/issues"
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId(project.group)
            artifactId(project.name)
            version(project.version)

            artifact(remapJar) {
                builtBy remapJar
            }

            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
         mavenLocal()
    }
}
