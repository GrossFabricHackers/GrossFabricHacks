plugins {
    id("java-library")
    id("maven-publish")
    id("fabric-loom").version("0.5-SNAPSHOT").apply(false)
}

project.group = "net.devtech"
project.version = "1.0.0"

final String minecraftVersion = "1.16.4"
final String yarnBuild = "7"

sourceCompatibility = 8
targetCompatibility = 8

allprojects {
    plugins.apply("fabric-loom")

    repositories {
        mavenLocal()

        maven {url = "https://dl.bintray.com/user11681/maven"}
        maven {url = "https://www.cursemaven.com"}
    }

    dependencies {
        minecraft("com.mojang:minecraft:${minecraftVersion}")
        mappings("net.fabricmc:yarn:${minecraftVersion}+build.${yarnBuild}:v2")
        modApi("net.fabricmc:fabric-loader:+")

        testImplementation("org.junit.jupiter:junit-jupiter:+")

        // concern
        // extraLibs files("${System.getProperty('java.home')}/../lib/tools.jar")

        // log spam control
        modApi("user11681:narratoroff:+")
        modApi("user11681:noauth:+")

        modApi(include("net.bytebuddy:byte-buddy-agent:+"))
        modApi(include("net.gudenau.lib:unsafe:+"))
        modApi(include("user11681:dynamicentry:+"))
        modApi(include("user11681:reflect:+"))

//        modImplementation("curse.maven:antixray-411170:3149338")
        modImplementation("curse.maven:xaerosminimap-263420:3153530")
        modImplementation("net.fabricmc.fabric-api:fabric-api:0.29.3+1.16")
    }

    [tasks.remapJar, tasks.remapSourcesJar].forEach {Task task ->
        task.doLast {
            task.inputs.files.forEach {File file ->
                file.delete()
            }
        }
    }

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

processResources {
    inputs.property("version", project.version)

    filesMatching("fabric.mod.json") {
        expand(version: project.version)
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE")
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            artifact(remapJar) {
                builtBy(remapJar)
            }

            artifact(sourcesJar) {
                builtBy(remapSourcesJar)
            }
        }
    }

    repositories {
        mavenLocal()
    }
}
